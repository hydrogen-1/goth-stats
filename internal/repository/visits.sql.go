// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: visits.sql

package repository

import (
	"context"
)

const getLast24h = `-- name: GetLast24h :one
select COUNT(*)
from visits
where t >= now() - interval '24 HOURS'
`

func (q *Queries) GetLast24h(ctx context.Context) (int64, error) {
	row := q.db.QueryRow(ctx, getLast24h)
	var count int64
	err := row.Scan(&count)
	return count, err
}

const getTotal = `-- name: GetTotal :one
select count(*) from visits
`

func (q *Queries) GetTotal(ctx context.Context) (int64, error) {
	row := q.db.QueryRow(ctx, getTotal)
	var count int64
	err := row.Scan(&count)
	return count, err
}

const insertVisit = `-- name: InsertVisit :exec
insert into visits (t) values (now())
`

func (q *Queries) InsertVisit(ctx context.Context) error {
	_, err := q.db.Exec(ctx, insertVisit)
	return err
}
